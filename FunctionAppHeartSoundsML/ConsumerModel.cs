// This file was auto-generated by ML.NET Model Builder. 

using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using FunctionAppHeartSoundsML.DataModels;
using Microsoft.ML;

namespace FunctionAppHeartSoundsML
{
    public class ConsumerModel
    {
        private static Lazy<PredictionEngine<HeartData,  HeartPrediction>> PredictionEngine = new Lazy<PredictionEngine<HeartData, HeartPrediction>>(CreatePredictionEngine);

        // For more info on consuming ML.NET models, visit https://aka.ms/mlnet-consume
        // Method for consuming model in your app
        public static HeartPrediction Predict(HeartData input)
        {
            HeartPrediction result = PredictionEngine.Value.Predict(input);
            return result;
        }

        public static PredictionEngine<HeartData, HeartPrediction> CreatePredictionEngine()
        {
            // Create new MLContext
            MLContext mlContext = new MLContext();

            // Load model & create prediction engine
            

            string deploymentPath = @"D:\home\site\wwwroot\";
            string modelPath = Path.Combine(deploymentPath, "MLModels", "MLModel.zip");

            ITransformer mlModel = mlContext.Model.Load(modelPath, out var modelInputSchema);
            
            var predEngine = mlContext.Model.CreatePredictionEngine<HeartData, HeartPrediction>(mlModel);

            return predEngine;
        }

    }
}